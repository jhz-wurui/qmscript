[General]
SyntaxVersion=2
MacroID=167e3fc1-9e08-4de0-824e-ad6e00227835
[Comment]

[Script]
//请在下面写上您的子程序或函数
//写完保存后，在任一命令库上点击右键并选择“刷新”即可
//请在下面写上您的子程序或函数
//写完保存后，在任一命令库上点击右键并选择“刷新”即可
//请在下面写上您的子程序或函数
//写完保存后，在任一命令库上点击右键并选择“刷新”即可
Public Declare Function SetDllPathW Lib "dmreg.dll" Alias "SetDllPathW" (ByVal path As String, ByVal mode As Long) As Long

Function 算法_随机数(起始值, 结束值)
    Dim 最大值, 最小值
    //判断传入的参数 哪一个是最大值,哪一个是最小值
    If 起始值 > 结束值 Then 
        最大值 = 起始值
        最小值 = 结束值
    Else 
        最大值 = 结束值
        最小值 = 起始值
    End If
    Randomize   //置随机数种子
    算法_随机数 = Int((最大值 - 最小值 + 1) * Rnd + 最小值)
End Function

Function 算法_字符串加入随机字符(待干扰字符串, 干扰百分比)
    Dim 干扰字符,加入符号数
    干扰字符 = Array("-", "*", "/")

    加入符号数 = cint(len(待干扰字符串)*干扰百分比)

    TracePrint "[算法_字符串加入随机字符]加入符号数:"&加入符号数

    //加入符号点
    arr = 算法_取指定范围内不重复随机数(1,len(待干扰字符串), 加入符号数)

    arr = 算法_数组排序升序(arr)

    temp = 待干扰字符串

    Dim arr切割(500),index

    index = 0

    // 待干扰字符串混淆 n个数其实切成了n+1块,但是只关心需要接符号的块,一般最后一块不需要关注.
    For i = 0 To UBound(arr)
        If i = 0 Then 
            str = mid(待干扰字符串, 1, arr(i))
        Else 
            str = mid(待干扰字符串,arr(i-1)+1,arr(i)-arr(i-1))
        End If
        arr切割(index) = str
        index = index + 1
    Next

    arr切割(index) = mid(待干扰字符串, arr(ubound(arr)) + 1, len(待干扰字符串) - arr(ubound(arr)))

    For i = 0 To index-1
        返回值 = Lib.ICEFRAG.算法_随机数(0,UBound(干扰字符))
	
        arr切割(i) = arr切割(i)&干扰字符(返回值)
    Next

    result = join(arr切割)
   	
    算法_字符串加入随机字符 = result	
End Function

Function 算法_取指定范围内不重复随机数(min, max, num)
    Dim arr, index,result
    arr = ""
    index = 0
    If max - min + 1 < num Then 
        TracePrint "总共都没有这么多个数!"
        EndScript 
    End If
		
    Do
    	exist = False
        返回值 = Lib.ICEFRAG.算法_随机数(min,max)
        
        temp = split(arr, ",")
        For i = 0 To UBound(temp)
            If temp(i) = cstr(返回值) Then 
                exist = True
                Exit For
            End If
        Next		
	
        If not exist  Then 
            If arr = "" Then 
                arr = 返回值
            Else 
                arr = arr &","&返回值
            End If          	
            index = index + 1
            If index >= num Then 
                //TracePrint "数量达标"
                Exit Do
            End If
        End If
    Loop
    
    //TracePrint arr
    
    strArr = split(arr, ",")
    
    For i = 0 To UBound(strArr)
        strArr(i) = clng(strArr(i))
    Next
     
	
    算法_取指定范围内不重复随机数 = strArr
End Function

Function 算法_数组排序升序(arr)
	Dim temp
	For i = 0 To UBound(arr)
		For j = i+1 To UBound(arr)
			If arr(j) < arr(i) Then 
				temp = arr(i)
				arr(i) = arr(j)
				arr(j) = temp
			End If
		Next
	Next
		
	算法_数组排序升序 = arr
End Function

Function 算法_数组排序降序(arr)
	Dim temp
	For i = 0 To UBound(arr)
		For j = i+1 To UBound(arr)
			If arr(j) > arr(i) Then 
				temp = arr(i)
				arr(i) = arr(j)
				arr(j) = temp
			End If
		Next
	Next
	
	算法_数组排序降序 = temp
End Function
//-------------------------注册大漠--------------------------//
Function 大漠_注册大漠(所需版本, 注册码)
    //创建文件夹, 便于释放大漠插件 以及其他资源
    Call Plugin.File.CreateFolder("c:\fuzhu")
    //释放大漠插件 及其他资源
    PutAttachment "c:\fuzhu","*.*"
    //要用到Regdll来注册大漠插件,所以也要释放到Plugin
    PutAttachment ".\Plugin", "RegDll.dll"
    PutAttachment ".\Plugin", "fydati.dll"
    //开始注册插件,使用绝对路径
    Call Plugin.RegDll.Reg("c:\fuzhu\dm.dll")
    //判断是否注册成功
    Set dm = CreateObject("dm.dmsoft")//创建大漠对象
    dm_ret = dm.SetPath("c:\fuzhu")
    当前版本 = dm.Ver()
    If 当前版本 <> 所需版本 Then 
        //说明没有注册成功
        //先释放先前创建的dm  这里等同于手动来注册了
        Set dm = nothing
        //尝试用regsvr32 来注册 必须使用绝对路径
        Set ws = CreateObject("Wscript.Shell")
        ws.run "regsvr32 c:\fuzhu\dm.dll /s"
        Set ws = nothing
        Delay 1500
        //再次判断是否注册成功
        Set dm = CreateObject("dm.dmsoft")
        当前版本 = dm.Ver()
        If 当前版本 <> 所需版本 Then 
            TracePrint "[注册大漠] 插件版本错误,当前使用的版本是:" & 当前版本 & ",插件所在目录是:"&dm.GetBasePath()
            MsgBox "请关闭杀毒软件、防火墙,重新打开本程序再尝试", 64, "炽天使123"
            大漠_注册大漠 = - 1 
        Else 
            //注册收费功能
            If 注册收费功能(注册码) = 1 Then 
                大漠_注册大漠 = 1
            Else 
                大漠_注册大漠 = -1
            End If
        End If
    Else 
        TracePrint "[注册大漠] 大漠插件注册成功, 版本: " & 当前版本
        If 大漠_注册收费功能(注册码) = 1 Then 
            大漠_注册大漠 = 1
        Else 
            大漠_注册大漠 = -1
        End If
    End If
End Function

//----------------------注册收费功能-------------------//
Function 大漠_注册收费功能(注册码)
    If 注册码 <> "" Then
        //注册收费功能
        dm_ret = dm.Reg(注册码, "0001")
        If dm_ret = 1 Then 
            TracePrint "[注册收费功能] 大漠收费功能注册成功"
            大漠_注册收费功能 = 1
        Else 
            MsgBox "大漠收费功能注册失败", 64, "炽天使"
            大漠_注册收费功能 = -1
        End If
    Else 
        大漠_注册收费功能 = 1	
    End If
End Function

//----------------------免注册调用大漠-----------------//
Sub 大漠_免注册调用大漠(所需版本, 注册码)
    Dim dm_ret
    //创建文件夹, 便于释放大漠插件 以及其他资源
    Call Plugin.File.CreateFolder("c:\fuzhu")
    //释放大漠插件 及其他资源
    PutAttachment "c:\fuzhu","*.*"
    //释放免注册文件
    PutAttachment ".\plugin", "dmreg.dll"
    dm_ret = SetDllPathW("c:\fuzhu\dm.dll", 0)
    TracePrint "dm_ret: " & dm_ret
    //声明大漠对象 , 判断是否注册成功
    Set dm = CreateObject("dm.dmsoft")
    当前版本 = dm.Ver()
    If 当前版本 = 所需版本 Then 
        TracePrint "[免注册调用大漠] 大漠插件注册成功, 版本: " & 当前版本
        //注册收费功能
        dm_ret = dm.Reg(注册码, "0001")
        If dm_ret = 1 Then 
            TracePrint "[免注册调用大漠] 大漠收费功能注册成功"
            大漠_免注册调用大漠 = 1
        Else 
            MsgBox "大漠收费功能注册失败", 64, "炽天使"
            大漠_免注册调用大漠 = -1
        End If
    Else 
        TracePrint "[免注册调用大漠] 插件版本错误,当前使用的版本是:" & 当前版本 & ",插件所在目录是:"&dm.GetBasePath()
        MsgBox "请关闭杀毒软件、防火墙,重新打开本程序再尝试", 64, "炽天使"
        大漠_免注册调用大漠 = -1
    End If
End Sub

//---------------------卸载大漠-----------------------//
Sub 大漠_卸载大漠()
    //开始卸载插件,使用绝对路径
    Call Plugin.RegDll.UnReg("c:\fuzhu\dm.dll")
End Sub

//------------------------配置文件保存数据------------------//
Sub ini_写配置(节名, 键名, 键值, 路径)
    If 路径 = "" Then 
        路径 = "c:\fuzhu\Global.ini"
    End If
    Call Plugin.File.WriteINI(节名, 键名, 键值, 路径)
End Sub

//------------------------配置文件读取数据------------------//
Function ini_读配置(节名, 键名, 路径)
    If 路径 = "" Then 
        路径 = "c:\fuzhu\Global.ini"
    End If
    ini_读配置 = Plugin.File.ReadINI(节名, 键名, 路径)
End Function

//------------------------延迟-----------------------------//
Sub 延迟(t1, t2)
    Delay 算法_随机数(t1, t2)
End Sub

//------------------------临界区开--------------------------//
Sub 临界区开(句柄)
    Call ini_写配置(CStr(句柄), "临界区", "1", "")
End Sub

//------------------------临界区关--------------------------//
Sub 临界区关(句柄)
    Call ini_写配置(CStr(句柄), "临界区", "0", "")
End Sub

//创建文件如果文件不存在则新建
Sub 文件_createFile(path)
    Dim fso, MyFile
    Set fso = CreateObject("Scripting.FileSystemObject") 
    //创建 
    Set MyFile = fso.CreateTextFile(path, True)//true则可以覆盖已有的同名文件
    MyFile.Close  //close是必要的,不要省     
End Sub

//创建文件如果文件不存在则新建,存在则删除
Sub 文件_createFileExistDel(path)
    Dim fso, MyFile
    Set fso = CreateObject("Scripting.FileSystemObject")
    IsFile = Plugin.File.IsFileExit(path)
    If IsFile <> - 1  Then 
        //创建 
        Set MyFile = fso.CreateTextFile(path, True)//true则可以覆盖已有的同名文件
        MyFile.Close  //close是必要的,不要省     
    Else 
        Call Plugin.File.DeleteFile(path)
        
        返回值 = Lib.icefrag.文件_readFileToArray(path)
        
        Set MyFile = fso.CreateTextFile(path, True)//true则可以覆盖已有的同名文件
        MyFile.Close  //close是必要的,不要省 
    End If
End Sub

Sub 文件_createFileIfNotExist(path)
    Dim fso, MyFile
    Set fso = CreateObject("Scripting.FileSystemObject")
    IsFile = Plugin.File.IsFileExit(path)
    If IsFile <> - 1  Then 
        //创建 
        Set MyFile = fso.CreateTextFile(path, True)//true则可以覆盖已有的同名文件
        MyFile.Close  //close是必要的,不要省     
    End If
End Sub

Function 文件_readFileToArray(path)
    Dim arr,Text
    Text = Plugin.File.ReadFileEx(path)
    arr = split(Text, "|")
    文件_readFileToArray = arr
End Function

Function 文件_读取整个文件(path)
    Dim 描述
    描述 = ""
    返回值 = Lib.ICEFRAG.文件_readFileToArray(path)
    For i = 0 To UBound(返回值)
        If i <> UBound(返回值) Then 
            描述 = 描述 & 返回值(i) & vbcrlf
        Else 
            描述 = 描述&返回值(i)
        End If
        
    Next
    文件_读取整个文件 = trim(描述)
End Function

Sub 文件_生成断网重连bat文件(宽带名称,账号,密码)
    Dim path 
    path = "c:\fuzhu\断网重连.bat"
    Call Lib.ICEFRAG.文件_createFileExistDel(path)
    Call Plugin.File.WriteFileEx(path, "@echo off")
    Call Plugin.File.WriteFileEx(path, "rasdial "&宽带名称&" /disconnect")
    Call Plugin.File.WriteFileEx(path, "ping 127.0.0.1 -n 1 1>nul")
    Call Plugin.File.WriteFileEx(path, "rasdial "&宽带名称&" "&账号&" "&密码)
End Sub

Function 找图_waitForImageDelayTime(x1, y1, x2, y2, 图片字符串,颜色色偏,相似度,延时,等待时间)
    Dim arr(2), flag, count
    arr(0) = 0
    arr(1) = 0
    arr(2)=-1
    flag = 0
    count=0	
    While flag = 0
        dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
        If intX >= 0 and intY >= 0 Then
            TracePrint "找到:" & split(图片字符串,"|")(dm_ret)
            flag = 1
            arr(0) = intx
            arr(1) = inty            
        End If
        count = count + 1
        If count > cint((等待时间 * 1000) / 延时) Then 
            flag = 1
            TracePrint "[找图_waitForImageDelayTime],等待时间已经结束,没有找到图片==>"&图片字符串
        End If
        Delay 延时
    Wend
    
    arr(2) = dm_ret
    	
    找图_waitForImageDelayTime = arr	
End Function

Function 找图_点击直到指定图片出现(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,点击后监控时间单位秒,等待时间)
    Dim arr(2),t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_点击直到指定图片出现],超时未出现指定图片" & 图片字符串
            arr(2) = - 1 
            Exit Do
        Else 
            If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
            End If        
            //            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            //            If intX >= 0 and intY >= 0 Then
            //                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
            //                arr(0) = intx
            //                arr(1) = inty
            //                arr(2) = dm_ret
            //                Exit Do
            //            End If	
            返回值 = 找图_waitForImageDelayTime(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,100,点击后监控时间单位秒)
            If 返回值(2) <> - 1  Then 
                TracePrint "找到图片:" & split(图片字符串, "|")(返回值(2))
                arr(0) = 返回值(0)
                arr(1) = 返回值(1)
                arr(2) = 返回值(2)
                Exit Do
            End If
        End If
    Loop
    找图_点击直到指定图片出现 = arr
End Function

Function 找图_点击一次直到指定图片出现(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,等待时间)
    Dim arr(2),t1
    t1 = time
    
    Call Lib.DMEX.LeftClickEx(点击x, 点击y, 100)
    
    Delay 500
    
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_点击一次直到指定图片出现],超时未出现指定图片" & 图片字符串
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do         
            End If	
        End If
        Delay 100
    Loop
    找图_点击一次直到指定图片出现 = arr
End Function

Function 找图_右键点击一次直到指定图片出现(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,等待时间)
    Dim arr(2),t1
    t1 = time
    dm.moveto 点击x, 点击y
    Delay 100
    dm.rightclick 
    Delay 100
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_右键点击一次直到指定图片出现],超时未出现指定图片" & 图片字符串
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do         
            End If	
        End If
        Delay 100
    Loop
    找图_右键点击一次直到指定图片出现 = arr
End Function

Function 找图_双击直到指定图片出现(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,延时,等待时间)
    Dim arr(2),t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_双击直到指定图片出现],超时未出现指定图片"
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do
            Else 
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftDoubleClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            End If	
        End If
    Loop
    找图_双击直到指定图片出现 = arr
End Function

Function 找图_点击直到指定图片消失(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,延时,等待时间)
    Dim result,t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_点击直到指定图片消失],超时指定图片还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            Else 
                TracePrint "[找图_点击直到指定图片消失],图片被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
    Loop
    找图_点击直到指定图片消失 = result
End Function

Function 找图_点击一次直到指定图片消失(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,等待时间)
    Dim result,t1
    t1 = time
    Call Lib.DMEX.LeftClickEx(点击x, 点击y, 100)
    Delay 100
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_点击一次直到指定图片消失],超时指定图片还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
            Else 
                TracePrint "[找图_点击一次直到指定图片消失],图片被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
        Delay 100
    Loop
    找图_点击一次直到指定图片消失 = result
End Function

Function 找图_直到指定图片消失(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,等待时间)
    Dim result,t1
    t1 = time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_直到指定图片消失],超时指定图片还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                //TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
            Else 
                TracePrint "[找图_直到指定图片消失],图片消失了"
                result = 1
                Exit Do
            End If	
        End If
        Delay 100
    Loop
    找图_直到指定图片消失 = result
End Function

Function 找图_双击直到指定图片消失(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,点击x,点击y,延时,等待时间)
    Dim result,t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找图_双击直到指定图片消失],超时指定图片还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindPic(x1,y1,x2,y2,图片字符串,颜色色偏,相似度,0,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到图片:" & split(图片字符串, "|")(dm_ret)
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftDoubleClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            Else 
                TracePrint "[找图_双击直到指定图片消失],图片被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
    Loop
    找图_双击直到指定图片消失 = result
End Function

Function 找字_waitForWordDelayTime(x1, y1, x2, y2, 待查找的字符串, 色彩描述,相似度,延时,等待时间)
    Dim 起始时间,结果(2)    
    结果(2) = - 1 
	
    起始时间 = Now
    
    Do While DateDiff("s", 起始时间, Now) < 等待时间
        dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串, 色彩描述, 相似度, intX, intY)
        If intX > 0 And intY > 0 Then 
            结果(2) = dm_ret
            TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
            结果(0) = intx
            结果(1) = inty
            Exit Do
        Else 
            Delay 延时
        End If
    Loop
	
    If 结果(2) = - 1  Then 
        TracePrint "[找字_waitForWordDelayTime]:"&待查找的字符串&",没有找到任何字符串!"
    End If
    找字_waitForWordDelayTime = 结果
End Function

Function 找字_点击直到指定文字出现(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,延时,等待时间)
    Dim arr(2),t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_点击直到指定文字出现],超时未出现指定文字"
            arr(2) = - 1 
            Exit Do
        Else 
            If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
            End If

            返回值 = 找字_waitForWordDelayTime(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,100,延时)
			If 返回值(2) <> - 1  Then 
				TracePrint "找到字符串:" & split(待查找的字符串, "|")(返回值(0))
                arr(0) = 返回值(0)
                arr(1) = 返回值(1)
                arr(2) = 返回值(2)
                Exit Do				
			End If
        End If
    Loop
    找字_点击直到指定文字出现 = arr
End Function

Function 找字_点击一次直到指定文字出现(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,等待时间)
    Dim arr(2), t1
    Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_点击一次直到指定文字出现],超时未出现指定文字"
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do
            End If   	
        End If
        Delay 100
    Loop
    找字_点击一次直到指定文字出现 = arr
End Function

Function 找字_右键点击一次直到指定文字出现(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,等待时间)
    Dim arr(2), t1
    //Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
    dm.moveto 点击x, 点击y
    Delay 100
    dm.rightclick 
    
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_右键点击一次直到指定文字出现],超时未出现指定文字"
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do
            End If   	
        End If
        Delay 100
    Loop
    找字_右键点击一次直到指定文字出现 = arr
End Function

Function 找字_双击直到指定文字出现(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,延时,等待时间)
    Dim arr(2),t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_双击直到指定文字出现],超时未出现指定文字"
            arr(2) = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
                arr(0) = intx
                arr(1) = inty
                arr(2) = dm_ret
                Exit Do
            Else 
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftDoubleClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            End If	
        End If
    Loop
    找字_双击直到指定文字出现 = arr
End Function

Function 找字_点击直到指定文字消失(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,延时,等待时间)
    Dim result,t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_点击直到指定文字消失],超时指定文字还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            Else 
                TracePrint "[找字_点击直到指定文字消失],文字被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
    Loop
    找字_点击直到指定文字消失 = result
End Function

Function 找字_点击一次直到指定文字消失(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,等待时间)
    Dim result,t1
    t1 = time
    Call Lib.DMEX.LeftClickEx(点击x, 点击y, 100)
    Delay 100
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_点击一次直到指定文字消失],超时指定文字还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
            Else 
                TracePrint "[找字_点击一次直到指定文字消失],文字被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
        Delay 100
    Loop
    找字_点击一次直到指定文字消失 = result
End Function

Function 找字_双击直到指定文字消失(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,点击x,点击y,延时,等待时间)
    Dim result,t1
    t1=time
    Do
        If abs(DateDiff("s", t1, time)) > 等待时间 Then 
            //================异常暂时不处理====================
            TracePrint "[找字_双击直到指定文字消失],超时指定文字还没消失"
            result = - 1 
            Exit Do
        Else 
            dm_ret = dm.FindStr(x1,y1,x2,y2,待查找的字符串,色彩描述,相似度,intX,intY)
            If intX >= 0 and intY >= 0 Then
                TracePrint "找到字符串:" & split(待查找的字符串, "|")(dm_ret)
                If 点击x <> "" and 点击x > 0 and 点击y <> "" and 点击y > 0 Then 
                    Call Lib.DMEX.LeftDoubleClickEx(点击x,点击y,100)
                    Delay 延时
                End If
            Else 
                TracePrint "[找字_双击直到指定文字消失],文字被单击消失了"
                result = 1
                Exit Do
            End If	
        End If
    Loop
    找字_双击直到指定文字消失 = result
End Function

Function 窗口_waitForHwnd(类名,标题,t)
    Dim 起始时间,hwnd,diff,result
    起始时间 = time
    Do
        hwnd = dm.FindWindow(类名,标题)
        If hwnd <> 0 Then 
            TracePrint "【waitForHwnd】指定窗口句柄出现"&hwnd
            result = hwnd
            Exit Do
        Else 
            diff = abs(DateDiff("s", time, 起始时间))
            If diff >= t Then 
                TracePrint "等待时间已经过去，没有出现指定的窗口"
                result = 0
                Exit Do
            End If
        End If
    Loop	
    窗口_waitForHwnd = result
End Function

Function 窗口_等待窗口状态(hwnd, t,状态)
    Dim result
    result = False
    t1 = time
    Do
        diff = abs(DateDiff("s", time, t1))
        If diff > t Then 
            TracePrint "【等待窗口激活】在指定时间没激活"
            Exit Do
        End If
    	
        dm_ret = dm.GetWindowState(hwnd,状态)
        If dm_ret = 1 Then 
            result = True
            TracePrint "达到窗口状态了"
            Exit Do
        Else 
            TracePrint "没有达到窗口状态了"
        End If
        Delay 2000
    Loop
    窗口_等待窗口状态 = result
End Function

Sub 窗口_移动窗口到左上角(hwnd)
    dm_ret = dm.SetWindowState(hwnd, 12)
    Delay 100
    dm.MoveWindow hwnd, 0, 0
    Delay 500
End Sub

Sub 窗口_设置子窗口到指定大小(父窗口句柄, 子窗口句柄, 宽, 高,误差)
    Dim temp,父窗口宽
    //先大概设置下父窗口大小,然后开始微调整
    dm_ret = dm.SetWindowSize(父窗口句柄, 宽, 高)
    //先将宽度调整到指定宽
    temp = 宽
    Do
        dm_ret = dm.SetWindowSize(父窗口句柄, temp, 高)
        dm_ret = dm.GetClientSize(子窗口句柄, w, h)
        TracePrint "宽度:"& w &",高度:"& h
        If abs(w - 宽) <= 误差 Then 
            Exit Do
        Else 
            temp = temp + 1	
        End If
        //Delay 200
    Loop
    dm_ret = dm.GetWindowRect(父窗口句柄,x1,y1,x2,y2)
    TracePrint "调整后父窗口宽度"&(x2-x1)
    父窗口宽 = abs(x2-x1)
    //调整高
    temp = 高
    Do
        dm_ret = dm.SetWindowSize(父窗口句柄,父窗口宽,temp)
        dm_ret = dm.GetClientSize(子窗口句柄, w, h)
        TracePrint "宽度:"& w &",高度:"& h
        If abs(h - 高) <= 误差 Then 
            Exit Do
        Else 
            temp = temp + 1	
        End If
    Loop
End Sub

/*
	适用于表格状格子，循环点击或者指定点击哪一个格子算法 
	参数说明： 
		第几个格子：格子的编号，从左上第一个格子开始，序号为1 
*/
Sub 通用技巧_背包式表格鼠标移动通用版(移动到的格子序号,横排格子总数,第一个格子x坐标,第一个格子y坐标,格子间x距离,格子间y距离)
    If 移动到的格子序号 <= 横排格子总数 Then 
        dm.moveto 第一个格子x坐标 + (移动到的格子序号 - 1) * 格子间x距离, 第一个格子y坐标
    ElseIf (移动到的格子序号 mod 横排格子总数) = 0 Then
        dm.moveto 第一个格子x坐标+((移动到的格子序号-1) mod 横排格子总数)*格子间x距离,第一个格子y坐标 + (移动到的格子序号/横排格子总数-1)*格子间y距离
    Else 
        dm.moveto 第一个格子x坐标+((移动到的格子序号-1) mod 横排格子总数)*格子间x距离,第一个格子y坐标 + fix(移动到的格子序号/横排格子总数)*格子间y距离
    End If 	
End Sub

Function 通用技巧_背包式表格鼠标移动通用版返回坐标(移动到的格子序号, 横排格子总数, 第一个格子x坐标, 第一个格子y坐标, 格子间x距离, 格子间y距离)
    Dim arr(1),x,y
    If 移动到的格子序号 <= 横排格子总数 Then 
        x = 第一个格子x坐标 + (移动到的格子序号 - 1) * 格子间x距离
        y = 第一个格子y坐标
    ElseIf (移动到的格子序号 mod 横排格子总数) = 0 Then
        x = 第一个格子x坐标 + ((移动到的格子序号 - 1) mod 横排格子总数) * 格子间x距离
        y = 第一个格子y坐标 + (移动到的格子序号/横排格子总数-1)*格子间y距离
    Else 
        x = 第一个格子x坐标 + ((移动到的格子序号 - 1) mod 横排格子总数) * 格子间x距离
        y = 第一个格子y坐标 + fix(移动到的格子序号/横排格子总数)*格子间y距离
    End If
    arr(0) = x
    arr(1) = y
    通用技巧_背包式表格鼠标移动通用版返回坐标 = arr
End function

Sub 窗口_设置窗口位置(hwnd, 窗口序号,每行窗口个数,x轴方向移动距离,y轴方向移动距离)
    //一行多少个 4 控制
    Dim x, y
	
    x = 窗口序号 mod 每行窗口个数
	
    y = int(窗口序号 / 每行窗口个数)
	
    dm_ret = dm.SetWindowState(hwnd, 12)
	
    Delay 100

    //300是 横向移动多少 200是纵向移动多少
    dm.MoveWindow hwnd, 0 + x * x轴方向移动距离, y * y轴方向移动距离   
End Sub

Function 靠谱助手_绑定靠谱助手
    hwnd = dm.FindWindow("WindowsForms", "靠谱助手")
    
    TracePrint "靠谱助手句柄:"&hwnd
	
    If hwnd = 0 Then 
        MessageBox "请启动靠谱助手以后再截图!"
        ExitScript
    Else 
        dm_ret = dm.SetWindowState(hwnd, 12)
        Delay 200
        dm.MoveWindow hwnd, 0, 0
        Delay 2000
    End If
    
    靠谱助手_绑定靠谱助手 = hwnd
End Function

Function 海马玩_绑定海马玩
    hwnd = dm.FindWindow("Qt5QWindowIcon", "海马玩模拟器")
    
    TracePrint "海马玩模拟器句柄:" & hwnd
   	
    If hwnd = 0 Then 
        MessageBox "请启动海马玩以后再截图!"
        ExitScript
    Else 
        dm_ret = dm.SetWindowState(hwnd, 12)
        Delay 10
        dm.MoveWindow hwnd, 0,0
        dm_ret = dm.BindWindow(hwnd,"normal","normal","normal",0)        
        Delay 10
    End If
    
    海马玩_绑定海马玩 = hwnd
End Function

Function 模拟器_绑定夜神
    hwnd = dm.FindWindow("Qt5QWindowIcon", "夜神")
    
    TracePrint "夜神模拟器句柄:" & hwnd
   	
    If hwnd = 0 Then 
        MessageBox "请启动夜神模拟器玩以后再截图!"
        ExitScript
    Else 
        dm_ret = dm.SetWindowState(hwnd, 12)
        Delay 10
        dm.MoveWindow hwnd, 0,0
        dm_ret = dm.BindWindow(hwnd,"normal","normal","normal",0)        
        Delay 10
    End If
    
    模拟器_绑定夜神 = hwnd
End Function

Sub 模拟器_下拉刷新(x, y,步长)
    Dim i
    dm.moveto x,y
    Delay 100
    dm.leftdown 
    For i = 1 To 100
        dm.moveto x, y + i * 步长
        // 影响下拉速度
        Delay 20
    Next
    dm.leftup
End Sub

Sub 模拟器_上拉刷新(x, y,步长)
    Dim i
    dm.moveto x,y
    Delay 10
    dm.leftdown 
    For i = 1 To 100
        dm.moveto x, y - i * 步长
        Delay 10
    Next
    dm.leftup
End Sub

Sub 模拟器_左拉刷新(x, y,步长,步数)
    Dim i
    dm.moveto x,y
    Delay 10
    dm.leftdown 
    For i = 1 To 步数
        dm.moveto x-i * 步长, y
        Delay 10
    Next
    dm.leftup
End Sub

Sub 模拟器_右拉刷新(x, y,步长,步数)
    Dim i
    dm.moveto x,y
    Delay 10
    dm.leftdown 
    For i = 1 To 步数
        dm.moveto x+i * 步长, y
        Delay 10
    Next
    dm.leftup
End Sub